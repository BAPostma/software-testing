Indication of time spent
------------------------
6 hours


Test report
-----------
Explanation of functions:
1. Function cnf
- Explanation:
Translates a formula to CNF (binds functions arrowfree, nnf and cnf' together)

- Implementation of a number of tests:
cnf (Neg (Neg (Neg p)))
-1
(isCNF . cnf) (Neg (Neg (Neg p)))
True

cnf (Neg (Dsj [p, (Neg q)]))
*(-1 2)
(isCNF . cnf) (Neg (Dsj [p, (Neg q)]))
True

cnf (Neg (Cnj [(Neg p), (Neg q)]))
+(1 2)
(isCNF . cnf) (Neg (Cnj [(Neg p), (Neg q)]))
True

cnf (Cnj [(Dsj [p, q]), r])
*(+(1 2) 3)
(isCNF . cnf) (Cnj [(Dsj [p, q]), r])
True

cnf (Dsj [(Cnj [(Prop 4), (Prop 5)]), (Cnj [q , r])])
*(*(+(4 2) +(4 3)) *(+(5 2) +(5 3)))
(isCNF . cnf) (Dsj [(Cnj [(Prop 4), (Prop 5)]), (Cnj [q , r])])
True

cnf (Impl p q)
+(-1 2)
(isCNF . cnf) (Impl p q)
True

cnf (Equiv p q)
*(*(+(1 -1) +(1 -2)) *(+(2 -1) +(2 -2)))
(isCNF . cnf) (Equiv p q)
True

cnf form1
*(*(*(+(+(-1 2) 1) +(+(-1 2) -2)) *(+(+(-1 2) -2) +(+(-1 2) 1))) *(*(+(+(2 -1) 1) +(+(2 -1) -2)) *(+(+(2 -1) -2) +(+(2 -1) 1))))
(isCNF . cnf) form1
True

cnf form2
*(*(*(+(+(-1 2) 1) +(+(-1 2) -2)) *(+(+(-1 2) -1) +(+(-1 2) 2))) *(*(+(+(1 -2) 1) +(+(1 -2) -2)) *(+(+(1 -2) -1) +(+(1 -2) 2))))
(isCNF . cnf) form2
True

cnf form3
*(*(+(+(1 2) +(-1 3)) +(+(1 -3) +(-1 3))) *(+(+(-2 2) +(-1 3)) +(+(-2 -3) +(-1 3))))
(isCNF . cnf) form3
True

2. Function cnf'
- Explanation:
Translates a formula that is arrow-free and in NNF to a CNF

- Implementation of a number of tests:
cnf' (Cnj [(Dsj [p, q]), r])
*(+(1 2) 3)

cnf' (Dsj [(Cnj [(Prop 4), (Prop 5)]), (Cnj [q , r])])
*(*(+(4 2) +(4 3)) *(+(5 2) +(5 3)))

3. Function dist
- Explanation:
Applies the function dist' to a list of formulas

- Implementation of a number of tests:
dist [(Cnj [(Prop 4), (Prop 5)]), (Cnj [q , r])]
*(*(+(4 2) +(4 3)) *(+(5 2) +(5 3)))

4. Function dist':
- Explanation:
Translates formulas in the form of:
(p ∧ q) ∨ r   to   (p ∨ r) ∧ (q ∨ r)
p ∨ (q ∧ r)   to   (p ∨ q) ∧ (p ∨ r)

- Implementation of a number of tests:
dist' (Cnj [p , q]) r
*(+(1 3) +(2 3))

dist' p (Cnj [q , r])
*(+(1 2) +(1 3))

5. Functions isCNF, isDist and isLiteral check whether a given formula is CNF
